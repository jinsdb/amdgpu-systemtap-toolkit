digraph G{
rankdir=TB;
size="1920,1080"
node [fontsize=12,fontcolor=blue,style=filled,fillcolor=Wheat,shape=box height=.3 ];//ordering=out];
"hip_impl::program_state_impl::load_code_object_and_freeze_executable" -> "hsa_code_object_reader_create_from_memory" [label=0,color=red]
"hip_impl::program_state_impl::load_code_object_and_freeze_executable" -> "HSA::hsa_code_object_reader_create_from_memory" [label=1,color=orange]
"HSA::hsa_code_object_reader_create_from_memory" -> "core::Runtime::IsOpen" [label=0,color=red]
"hip_impl::program_state_impl::load_code_object_and_freeze_executable" -> "hsa_executable_load_agent_code_object" [label=2,color=greenyellow]
"hip_impl::program_state_impl::load_code_object_and_freeze_executable" -> "HSA::hsa_executable_load_agent_code_object" [label=3,color=green]
"HSA::hsa_executable_load_agent_code_object" -> "core::Runtime::IsOpen " [label=0,color=red]
"HSA::hsa_executable_load_agent_code_object" -> "amd::hsa::common::ObjectAt" [label=1,color=orange]
"amd::hsa::common::ObjectAt" -> "amd::hsa::common::IsAccessibleMemoryAddress" [label=0,color=red]
"amd::hsa::common::ObjectAt" -> "amd::hsa::common::IsAccessibleMemoryAddress" [label=1,color=orange]
"HSA::hsa_executable_load_agent_code_object" -> "amd::hsa::loader::ExecutableImpl::LoadCodeObject" [label=2,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::common::ReaderWriterLock::WriterLock" [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::loader::LoaderOptions::LoaderOptions" [label=1,color=orange]
"amd::hsa::loader::LoaderOptions::LoaderOptions" -> "amd::options::OptionParser::AddOption" [label=0,color=red]
"amd::options::OptionParser::AddOption" -> "amd::options::OptionBase::IsValid" [label=0,color=red]
"amd::options::OptionParser::AddOption" -> "std::vector" [label=1,color=orange]
"amd::options::OptionParser::AddOption" -> "amd::options::OptionBase::Accept" [label=2,color=greenyellow]
"amd::options::OptionParser::AddOption" -> "amd::options::PrefixOption::IsValid" [label=3,color=green]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::code::AmdHsaCode::AmdHsaCode" [label=2,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::code::AmdHsaCode::InitAsHandle" [label=3,color=green]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::code::AmdHsaCode::InitAsBuffer" [label=4,color=blue]
"amd::hsa::code::AmdHsaCode::InitAsBuffer" -> "amd::elf::NewElf64Image" [label=0,color=red]
"amd::elf::NewElf64Image" -> "amd::elf::GElfImage::GElfImage" [label=0,color=red]
"amd::hsa::code::AmdHsaCode::InitAsBuffer" -> "amd::elf::GElfImage::initAsBuffer" [label=1,color=orange]
"amd::elf::GElfImage::initAsBuffer" -> "amd::elf::ElfSize" [label=0,color=red]
"amd::hsa::code::AmdHsaCode::InitAsBuffer" -> "amd::elf::GElfImage::pullElf" [label=2,color=greenyellow]
"amd::elf::GElfImage::pullElf" -> "std::vector::reserve" [label=0,color=red]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfSegment::pull" [label=1,color=orange]
"amd::elf::GElfImage::pullElf" -> "std::vector " [label=2,color=greenyellow]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfSection::pull" [label=3,color=green]
"amd::elf::GElfSection::pull" -> "amd::elf::GElfSection::pull0" [label=0,color=red]
"amd::elf::GElfSection::pull" -> "std::vector::operator=" [label=1,color=orange]
"amd::elf::GElfSection::pull" -> "amd::elf::GElfImage::segmentByVAddr" [label=2,color=greenyellow]
"amd::elf::GElfImage::pullElf" -> "std::vector " [label=4,color=blue]
"amd::elf::GElfImage::pullElf" -> "std::vector " [label=5,color=indigo]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfNoteSection::type" [label=6,color=purple]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfSymbolTable::type" [label=7,color=pink]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfSection::type" [label=8,color=black]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfStringTable::type" [label=9,color=brown]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfStringTable::pullData" [label=10,color=red]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfSymbolTable::pullData" [label=11,color=orange]
"amd::elf::GElfSymbolTable::pullData" -> "std::vector  " [label=0,color=red]
"amd::elf::GElfSymbolTable::pullData" -> "std::vector  " [label=1,color=orange]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfSection::pullData" [label=12,color=greenyellow]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfNoteSection::Name" [label=13,color=green]
"amd::elf::GElfNoteSection::Name" -> "amd::elf::GElfSection::Name" [label=0,color=red]
"amd::elf::GElfSection::Name" -> "amd::elf::GElfImage::shstrtab" [label=0,color=red]
"amd::elf::GElfSection::Name" -> "amd::elf::GElfStringTable::getString" [label=1,color=orange]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfSymbolTable::Name" [label=14,color=blue]
"amd::elf::GElfSymbolTable::Name" -> "amd::elf::GElfSection::Name" [label=0,color=red]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfSection::Name" [label=15,color=indigo]
"amd::elf::GElfImage::pullElf" -> "amd::elf::GElfStringTable::Name" [label=16,color=purple]
"amd::elf::GElfStringTable::Name" -> "amd::elf::GElfSection::Name" [label=0,color=red]
"amd::elf::GElfImage::pullElf" -> "std::vector " [label=17,color=pink]
"amd::hsa::code::AmdHsaCode::InitAsBuffer" -> "amd::hsa::code::AmdHsaCode::PullElf" [label=3,color=green]
"amd::hsa::code::AmdHsaCode::PullElf" -> "amd::hsa::code::AmdHsaCode::GetCodeObjectVersion" [label=0,color=red]
"amd::hsa::code::AmdHsaCode::GetCodeObjectVersion" -> "covariant return thunk to amd::elf::GElfImage::note()" [label=0,color=red]
"covariant return thunk to amd::elf::GElfImage::note()" -> "amd::elf::GElfImage::note" [label=0,color=red]
"amd::hsa::code::AmdHsaCode::GetCodeObjectVersion" -> "non-virtual thunk to amd::elf::GElfNoteSection::getNote(std::string const&, unsigned int, void**, unsigned int*)" [label=1,color=orange]
"amd::hsa::code::AmdHsaCode::GetCodeObjectVersion" -> "amd::elf::GElfNoteSection::getNote" [label=2,color=greenyellow]
"amd::elf::GElfNoteSection::getNote" -> "amd::elf::GetNoteString" [label=0,color=red]
"amd::hsa::code::AmdHsaCode::PullElf" -> "amd::hsa::code::AmdHsaCode::PullElfV2" [label=1,color=orange]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfImage::segmentCount" [label=0,color=red]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfImage::segment" [label=1,color=orange]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSegment::type" [label=2,color=greenyellow]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "std::vector   " [label=3,color=green]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfImage::sectionCount" [label=4,color=blue]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "covariant return thunk to amd::elf::GElfImage::section(unsigned long)" [label=5,color=indigo]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfNoteSection::type " [label=6,color=purple]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfNoteSection::Name" [label=7,color=pink]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSymbolTable::type " [label=8,color=black]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSymbolTable::Name" [label=9,color=brown]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSection::type " [label=10,color=red]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSection::Name" [label=11,color=orange]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfStringTable::type " [label=12,color=greenyellow]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfStringTable::Name" [label=13,color=green]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSection::flags" [label=14,color=blue]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "std::vector   " [label=15,color=indigo]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "covariant return thunk to amd::elf::GElfImage::symtab()" [label=16,color=purple]
"covariant return thunk to amd::elf::GElfImage::symtab()" -> "amd::elf::GElfImage::symtab" [label=0,color=red]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "non-virtual thunk to amd::elf::GElfSymbolTable::symbolCount()" [label=17,color=pink]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSymbolTable::symbolCount" [label=18,color=black]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "non-virtual thunk to amd::elf::GElfSymbolTable::symbol(unsigned long)" [label=19,color=brown]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSymbolTable::symbol" [label=20,color=red]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSymbol::type" [label=21,color=orange]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSymbol::section" [label=22,color=greenyellow]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSymbol::value" [label=23,color=green]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSection::addr" [label=24,color=blue]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "amd::elf::GElfSection::getData" [label=25,color=indigo]
"amd::hsa::code::AmdHsaCode::PullElfV2" -> "std::vector   " [label=26,color=purple]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::code::AmdHsaCode::GetIsa" [label=5,color=indigo]
"amd::hsa::code::AmdHsaCode::GetIsa" -> "amd::hsa::code::AmdHsaCode::GetCodeObjectVersion" [label=0,color=red]
"amd::hsa::code::AmdHsaCode::GetIsa" -> "amd::hsa::code::AmdHsaCode::GetNoteIsa" [label=1,color=orange]
"amd::hsa::code::AmdHsaCode::GetNoteIsa" -> "covariant return thunk to amd::elf::GElfImage::note()" [label=0,color=red]
"amd::hsa::code::AmdHsaCode::GetNoteIsa" -> "non-virtual thunk to amd::elf::GElfNoteSection::getNote(std::string const&, unsigned int, void**, unsigned int*) " [label=1,color=orange]
"amd::hsa::code::AmdHsaCode::GetNoteIsa" -> "amd::elf::GElfNoteSection::getNote" [label=2,color=greenyellow]
"amd::hsa::code::AmdHsaCode::GetNoteIsa" -> "amd::elf::GetNoteString " [label=3,color=green]
"amd::hsa::code::AmdHsaCode::GetIsa" -> "__gnu_cxx::__to_xstring" [label=2,color=greenyellow]
"amd::hsa::code::AmdHsaCode::GetIsa" -> "covariant return thunk to amd::elf::GElfImage::note()" [label=3,color=green]
"amd::hsa::code::AmdHsaCode::GetIsa" -> "non-virtual thunk to amd::elf::GElfNoteSection::getNote(std::string const&, unsigned int, void**, unsigned int*)  " [label=4,color=blue]
"amd::hsa::code::AmdHsaCode::GetIsa" -> "amd::elf::GElfNoteSection::getNote" [label=5,color=indigo]
"amd::hsa::code::AmdHsaCode::GetIsa" -> "amd::elf::GElfImage::EFlags" [label=6,color=purple]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::code::AmdHsaCode::GetCodeObjectVersion" [label=6,color=purple]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::code::AmdHsaCode::GetNoteHsail" [label=7,color=pink]
"amd::hsa::code::AmdHsaCode::GetNoteHsail" -> "covariant return thunk to amd::elf::GElfImage::note()" [label=0,color=red]
"amd::hsa::code::AmdHsaCode::GetNoteHsail" -> "non-virtual thunk to amd::elf::GElfNoteSection::getNote(std::string const&, unsigned int, void**, unsigned int*)   " [label=1,color=orange]
"amd::hsa::code::AmdHsaCode::GetNoteHsail" -> "amd::elf::GElfNoteSection::getNote" [label=2,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::LoaderContext::IsaFromName" [label=8,color=black]
"amd::LoaderContext::IsaFromName" -> "HSA::hsa_isa_from_name" [label=0,color=red]
"HSA::hsa_isa_from_name" -> "core::Runtime::IsOpen  " [label=0,color=red]
"HSA::hsa_isa_from_name" -> "core::IsaRegistry::GetIsa" [label=1,color=orange]
"core::IsaRegistry::GetIsa" -> "core::Isa::GetFullName" [label=0,color=red]
"core::Isa::GetFullName" -> "std::string::_S_construct" [label=0,color=red]
"core::IsaRegistry::GetIsa" -> "std::_Hashtable::find" [label=1,color=orange]
"std::_Hashtable::find" -> "std::_Hashtable::_M_find_before_node" [label=0,color=red]
"std::_Hashtable::find" -> "std::_Hashtable::_M_find_before_node" [label=1,color=orange]
"core::IsaRegistry::GetIsa" -> "std::_Hashtable::find" [label=2,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::LoaderContext::IsaSupportedByAgent" [label=9,color=brown]
"amd::LoaderContext::IsaSupportedByAgent" -> "HSA::hsa_agent_iterate_isas" [label=0,color=red]
"HSA::hsa_agent_iterate_isas" -> "core::Runtime::IsOpen   " [label=0,color=red]
"HSA::hsa_agent_iterate_isas" -> "amd::GpuAgent::isa" [label=1,color=orange]
"HSA::hsa_agent_iterate_isas" -> "(anonymous namespace)::IsIsaEquivalent" [label=2,color=greenyellow]
"(anonymous namespace)::IsIsaEquivalent" -> "amd::hsa::common::ObjectAt" [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::code::AmdHsaCode::ElfData" [label=10,color=red]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::elf::GElfImage::data" [label=11,color=orange]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::code::AmdHsaCode::ElfSize" [label=12,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::elf::GElfImage::size" [label=13,color=green]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::elf::ElfSize " [label=14,color=blue]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "std::vector    " [label=15,color=indigo]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "std::vector    " [label=16,color=purple]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "std::vector    " [label=17,color=pink]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::loader::ExecutableImpl::LoadSegments" [label=18,color=black]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::loader::ExecutableImpl::LoadSegmentsV2" [label=19,color=brown]
"amd::hsa::loader::ExecutableImpl::LoadSegmentsV2" -> "amd::elf::GElfSegment::vaddr" [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::LoadSegmentsV2" -> "amd::elf::GElfSegment::memSize" [label=1,color=orange]
"amd::hsa::loader::ExecutableImpl::LoadSegmentsV2" -> "amd::LoaderContext::SegmentAlloc" [label=2,color=greenyellow]
"amd::LoaderContext::SegmentAlloc" -> "HSA::hsa_agent_get_info" [label=0,color=red]
"HSA::hsa_agent_get_info" -> "core::Runtime::IsOpen    " [label=0,color=red]
"HSA::hsa_agent_get_info" -> "amd::CpuAgent::GetInfo" [label=1,color=orange]
"HSA::hsa_agent_get_info" -> "amd::GpuAgent::GetInfo" [label=2,color=greenyellow]
"amd::GpuAgent::GetInfo" -> "std::string::_S_construct " [label=0,color=red]
"amd::GpuAgent::GetInfo" -> "hsa_amd_image_get_info_max_dim" [label=1,color=orange]
"amd::LoaderContext::SegmentAlloc" -> "(anonymous namespace)::RegionMemory::AgentLocal" [label=1,color=orange]
"(anonymous namespace)::RegionMemory::AgentLocal" -> "std::__find_if" [label=0,color=red]
"std::__find_if" -> "(anonymous namespace)::IsLocalRegion" [label=0,color=red]
"amd::LoaderContext::SegmentAlloc" -> "amd::GpuAgent::InvalidateCodeCaches" [label=2,color=greenyellow]
"amd::GpuAgent::InvalidateCodeCaches" -> "amd::AqlQueue::ExecutePM4" [label=0,color=red]
"amd::AqlQueue::ExecutePM4" -> "os::AcquireMutex" [label=0,color=red]
"amd::AqlQueue::ExecutePM4" -> "amd::AqlQueue::AddWriteIndexAcqRel" [label=1,color=orange]
"amd::AqlQueue::ExecutePM4" -> "amd::AqlQueue::LoadReadIndexRelaxed" [label=2,color=greenyellow]
"amd::AqlQueue::ExecutePM4" -> "non-virtual thunk to amd::AqlQueue::StoreRelease(long)" [label=3,color=green]
"amd::AqlQueue::ExecutePM4" -> "amd::AqlQueue::StoreRelease" [label=4,color=blue]
"amd::AqlQueue::ExecutePM4" -> "amd::AqlQueue::StoreRelaxed" [label=5,color=indigo]
"amd::GpuAgent::InvalidateCodeCaches" -> "os::ReleaseMutex" [label=1,color=orange]
"amd::LoaderContext::SegmentAlloc" -> "(anonymous namespace)::RegionMemory::Allocate" [label=3,color=green]
"(anonymous namespace)::RegionMemory::Allocate" -> "HSA::hsa_memory_allocate" [label=0,color=red]
"HSA::hsa_memory_allocate" -> "core::Runtime::IsOpen     " [label=0,color=red]
"HSA::hsa_memory_allocate" -> "core::Runtime::AllocateMemory" [label=1,color=orange]
"core::Runtime::AllocateMemory" -> "os::AcquireMutex " [label=0,color=red]
"core::Runtime::AllocateMemory" -> "amd::MemoryRegion::Allocate" [label=1,color=orange]
"amd::MemoryRegion::Allocate" -> "amd::MemoryRegion::BlockAllocator::alloc" [label=0,color=red]
"amd::MemoryRegion::BlockAllocator::alloc" -> "amd::MemoryRegion::Allocate" [label=0,color=red]
"amd::MemoryRegion::Allocate" -> "std::_Rb_tree" [label=1,color=orange]
"std::_Rb_tree" -> "std::_Rb_tree::_M_get_insert_hint_unique_pos" [label=0,color=red]
"std::_Rb_tree" -> "std::_Rb_tree::_M_get_insert_unique_pos" [label=1,color=orange]
"std::_Rb_tree" -> "std::_Rb_tree::_M_get_insert_hint_unique_pos" [label=2,color=greenyellow]
"std::_Rb_tree" -> "std::_Rb_tree::_M_get_insert_unique_pos" [label=3,color=green]
"std::_Rb_tree" -> "std::_Rb_tree::_M_get_insert_hint_unique_pos" [label=4,color=blue]
"std::_Rb_tree" -> "std::_Rb_tree::_M_get_insert_unique_pos" [label=5,color=indigo]
"amd::MemoryRegion::Allocate" -> "std::_Rb_tree" [label=2,color=greenyellow]
"amd::MemoryRegion::Allocate" -> "std::_Rb_tree::_M_get_insert_hint_unique_pos " [label=3,color=green]
"amd::MemoryRegion::Allocate" -> "std::_Rb_tree::_M_get_insert_unique_pos " [label=4,color=blue]
"amd::MemoryRegion::Allocate" -> "std::_Rb_tree::_M_insert_node" [label=5,color=indigo]
"core::Runtime::AllocateMemory" -> "std::_Rb_tree" [label=2,color=greenyellow]
"core::Runtime::AllocateMemory" -> "os::ReleaseMutex " [label=3,color=green]
"amd::hsa::loader::ExecutableImpl::LoadSegmentsV2" -> "amd::elf::GElfSegment::offset" [label=3,color=green]
"amd::hsa::loader::ExecutableImpl::LoadSegmentsV2" -> "amd::hsa::loader::ExecutableImpl::LoadSegmentV2" [label=4,color=blue]
"amd::hsa::loader::ExecutableImpl::LoadSegmentV2" -> "amd::elf::GElfSegment::imageSize" [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::LoadSegmentV2" -> "amd::elf::GElfSegment::data" [label=1,color=orange]
"amd::hsa::loader::ExecutableImpl::LoadSegmentV2" -> "amd::elf::GElfSegment::vaddr " [label=2,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::LoadSegmentV2" -> "amd::hsa::loader::Segment::Copy" [label=3,color=green]
"amd::hsa::loader::Segment::Copy" -> "amd::LoaderContext::SegmentCopy" [label=0,color=red]
"amd::hsa::loader::Segment::Copy" -> "(anonymous namespace)::RegionMemory::Copy" [label=1,color=orange]
"amd::hsa::loader::ExecutableImpl::LoadSegmentsV2" -> "std::vector     " [label=5,color=indigo]
"amd::hsa::loader::ExecutableImpl::LoadSegmentsV2" -> "std::vector     " [label=6,color=purple]
"amd::hsa::loader::ExecutableImpl::LoadSegmentsV2" -> "std::vector     " [label=7,color=pink]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::elf::GElfSymbol::type " [label=20,color=red]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::loader::ExecutableImpl::LoadSymbol" [label=21,color=orange]
"amd::hsa::loader::ExecutableImpl::LoadSymbol" -> "amd::hsa::code::Symbol::IsDeclaration" [label=0,color=red]
"amd::hsa::code::Symbol::IsDeclaration" -> "amd::elf::GElfSymbol::type  " [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" [label=22,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::code::KernelSymbolV2::IsAgent" [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::elf::GElfSymbol::name" [label=1,color=orange]
"amd::elf::GElfSymbol::name" -> "amd::elf::GElfStringTable::getString " [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "std::_Hashtable::find" [label=2,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "HSA::hsa_agent_get_info" [label=3,color=green]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::loader::ExecutableImpl::SymbolAddress" [label=4,color=blue]
"amd::hsa::loader::ExecutableImpl::SymbolAddress" -> "amd::elf::GElfSymbol::section " [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::SymbolAddress" -> "amd::hsa::loader::ExecutableImpl::SectionSegment" [label=1,color=orange]
"amd::hsa::loader::ExecutableImpl::SectionSegment" -> "amd::elf::GElfSection::addr " [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::SymbolAddress" -> "amd::hsa::code::KernelSymbolV2::VAddr" [label=2,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::SymbolAddress" -> "amd::elf::GElfSymbol::value " [label=3,color=green]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::LoaderContext::SegmentAddress" [label=5,color=indigo]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "(anonymous namespace)::RegionMemory::Address" [label=6,color=purple]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::loader::ExecutableImpl::FindHostAddress" [label=7,color=pink]
"amd::hsa::loader::ExecutableImpl::FindHostAddress" -> "amd::LoaderContext::SegmentAddress " [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::FindHostAddress" -> "(anonymous namespace)::RegionMemory::Address " [label=1,color=orange]
"amd::hsa::loader::ExecutableImpl::FindHostAddress" -> "amd::LoaderContext::SegmentHostAddress" [label=2,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::FindHostAddress" -> "(anonymous namespace)::RegionMemory::HostAddress" [label=3,color=green]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::code::Symbol::GetSymbolName" [label=8,color=black]
"amd::hsa::code::Symbol::GetSymbolName" -> "amd::elf::GElfSymbol::name" [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::code::Symbol::IsVariableSymbol" [label=9,color=brown]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::code::KernelSymbol::IsKernelSymbol" [label=10,color=red]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::elf::GElfImage::EFlags " [label=11,color=orange]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "std::string::_Rep::_M_dispose" [label=12,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::elf::GElfSymbol::section  " [label=13,color=green]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::code::KernelSymbolV2::SectionOffset" [label=14,color=blue]
"amd::hsa::code::KernelSymbolV2::SectionOffset" -> "amd::elf::GElfSymbol::value  " [label=0,color=red]
"amd::hsa::code::KernelSymbolV2::SectionOffset" -> "amd::elf::GElfSymbol::section   " [label=1,color=orange]
"amd::hsa::code::KernelSymbolV2::SectionOffset" -> "amd::elf::GElfSection::addr  " [label=2,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::elf::GElfSection::getData " [label=15,color=indigo]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::code::Symbol::Size" [label=16,color=purple]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::elf::GElfSymbol::size" [label=17,color=pink]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::elf::GElfSection::size" [label=18,color=black]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::code::Symbol::GetModuleName" [label=19,color=brown]
"amd::hsa::code::Symbol::GetModuleName" -> "amd::elf::GElfSymbol::name" [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::code::Symbol::Linkage" [label=20,color=red]
"amd::hsa::code::Symbol::Linkage" -> "amd::elf::GElfSymbol::binding" [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::code::AmdHsaCode::ElfData " [label=21,color=orange]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::elf::GElfImage::data " [label=22,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::code::AmdHsaCode::ElfSize " [label=23,color=green]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::elf::GElfImage::size " [label=24,color=blue]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::elf::ElfSize  " [label=25,color=indigo]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::loader::ExecutableImpl::SymbolSegment" [label=26,color=purple]
"amd::hsa::loader::ExecutableImpl::SymbolSegment" -> "amd::elf::GElfSymbol::section    " [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::loader::ExecutableImpl::SectionSegment" [label=27,color=pink]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::elf::GElfSection::addr   " [label=28,color=black]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "amd::hsa::loader::Segment::Copy" [label=29,color=brown]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "std::_Hashtable::_M_find_before_node " [label=30,color=red]
"amd::hsa::loader::ExecutableImpl::LoadDefinitionSymbol" -> "std::_Hashtable::_M_insert_unique_node" [label=31,color=orange]
"std::_Hashtable::_M_insert_unique_node" -> "std::_Hashtable::_M_rehash" [label=0,color=red]
"std::_Hashtable::_M_rehash" -> "std::__detail::_Hashtable_alloc::_M_allocate_buckets" [label=0,color=red]
"std::_Hashtable::_M_insert_unique_node" -> "std::_Hashtable::_M_rehash" [label=1,color=orange]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::loader::ExecutableImpl::ApplyRelocations" [label=23,color=green]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::code::AmdHsaCode::~AmdHsaCode" [label=24,color=blue]
"amd::hsa::code::AmdHsaCode::~AmdHsaCode" -> "amd::hsa::code::AmdHsaCode::~AmdHsaCode" [label=0,color=red]
"amd::hsa::code::AmdHsaCode::~AmdHsaCode" -> "amd::hsa::code::KernelSymbolV2::~KernelSymbolV2" [label=1,color=orange]
"amd::hsa::code::AmdHsaCode::~AmdHsaCode" -> "amd::elf::GElfImage::~GElfImage" [label=2,color=greenyellow]
"amd::elf::GElfImage::~GElfImage" -> "amd::elf::GElfImage::~GElfImage" [label=0,color=red]
"amd::elf::GElfImage::~GElfImage" -> "amd::elf::GElfNoteSection::~GElfNoteSection" [label=1,color=orange]
"amd::elf::GElfImage::~GElfImage" -> "amd::elf::GElfSymbolTable::~GElfSymbolTable" [label=2,color=greenyellow]
"amd::elf::GElfSymbolTable::~GElfSymbolTable" -> "amd::elf::GElfSymbol::~GElfSymbol" [label=0,color=red]
"amd::elf::GElfImage::~GElfImage" -> "amd::elf::GElfSection::~GElfSection" [label=3,color=green]
"amd::elf::GElfImage::~GElfImage" -> "amd::elf::GElfStringTable::~GElfStringTable" [label=4,color=blue]
"amd::elf::GElfImage::~GElfImage" -> "amd::elf::GElfSegment::~GElfSegment" [label=5,color=indigo]
"amd::elf::GElfImage::~GElfImage" -> "amd::elf::FileImage::~FileImage" [label=6,color=purple]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "std::string::_Rep::_M_dispose " [label=25,color=indigo]
"amd::hsa::loader::ExecutableImpl::LoadCodeObject" -> "amd::hsa::common::ReaderWriterLock::WriterUnlock" [label=26,color=purple]
"HSA::hsa_executable_load_agent_code_object" -> "amd::hsa::loader::ExecutableImpl::LoadCodeObject" [label=3,color=green]
"hip_impl::program_state_impl::load_code_object_and_freeze_executable" -> "hsa_executable_freeze" [label=4,color=blue]
"hip_impl::program_state_impl::load_code_object_and_freeze_executable" -> "HSA::hsa_executable_freeze" [label=5,color=indigo]
"HSA::hsa_executable_freeze" -> "core::Runtime::IsOpen      " [label=0,color=red]
"HSA::hsa_executable_freeze" -> "amd::hsa::loader::AmdHsaCodeLoader::FreezeExecutable" [label=1,color=orange]
"amd::hsa::loader::AmdHsaCodeLoader::FreezeExecutable" -> "amd::hsa::loader::ExecutableImpl::Freeze" [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::Freeze" -> "amd::hsa::common::ReaderWriterLock::WriterLock " [label=0,color=red]
"amd::hsa::loader::ExecutableImpl::Freeze" -> "amd::hsa::loader::Segment::Freeze" [label=1,color=orange]
"amd::hsa::loader::Segment::Freeze" -> "amd::LoaderContext::SegmentFreeze" [label=0,color=red]
"amd::hsa::loader::Segment::Freeze" -> "(anonymous namespace)::RegionMemory::Freeze" [label=1,color=orange]
"(anonymous namespace)::RegionMemory::Freeze" -> "amd::GpuAgent::DmaCopy" [label=0,color=red]
"amd::GpuAgent::DmaCopy" -> "os::AcquireMutex  " [label=0,color=red]
"amd::GpuAgent::DmaCopy" -> "std::_Function_handler::_M_invoke" [label=1,color=orange]
"std::_Function_handler::_M_invoke" -> "core::Runtime::AllocateMemory" [label=0,color=red]
"std::_Function_handler::_M_invoke" -> "os::AcquireMutex   " [label=1,color=orange]
"std::_Function_handler::_M_invoke" -> "std::_Function_handler::_M_invoke" [label=2,color=greenyellow]
"std::_Function_handler::_M_invoke" -> "amd::GpuAgent::CreateInterceptibleQueue" [label=3,color=green]
"amd::GpuAgent::CreateInterceptibleQueue" -> "amd::GpuAgent::QueueCreate" [label=0,color=red]
"amd::GpuAgent::QueueCreate" -> "os::TryAcquireMutex" [label=0,color=red]
"amd::GpuAgent::QueueCreate" -> "amd::AqlQueue::AqlQueue" [label=1,color=orange]
"amd::AqlQueue::AqlQueue" -> "core::Shared::Shared" [label=0,color=red]
"core::Shared::Shared" -> "core::SharedSignalPool_t::alloc" [label=0,color=red]
"core::SharedSignalPool_t::alloc" -> "os::AcquireMutex    " [label=0,color=red]
"core::SharedSignalPool_t::alloc" -> "std::_Function_handler::_M_invoke" [label=1,color=orange]
"std::_Function_handler::_M_invoke" -> "std::_Function_base::_Base_manager::_M_manager" [label=4,color=blue]
"std::_Function_handler::_M_invoke" -> "os::ReleaseMutex  " [label=5,color=indigo]
"std::_Function_handler::_M_invoke" -> "amd::GpuAgent::CreateBlitKernel" [label=6,color=purple]
"amd::GpuAgent::CreateBlitKernel" -> "amd::BlitKernel::BlitKernel" [label=0,color=red]
"amd::GpuAgent::CreateBlitKernel" -> "amd::BlitKernel::Initialize" [label=1,color=orange]
"amd::BlitKernel::Initialize" -> "HSA::hsa_signal_create" [label=0,color=red]
"amd::BlitKernel::Initialize" -> "AMD::hsa_amd_signal_create" [label=1,color=orange]
"AMD::hsa_amd_signal_create" -> "core::Runtime::IsOpen       " [label=0,color=red]
"AMD::hsa_amd_signal_create" -> "core::InterruptSignal::InterruptSignal" [label=1,color=orange]
"core::InterruptSignal::InterruptSignal" -> "core::LocalSignal::LocalSignal" [label=0,color=red]
"core::LocalSignal::LocalSignal" -> "core::Shared::Shared" [label=0,color=red]
"core::Shared::Shared" -> "std::_Function_handler::_M_invoke" [label=1,color=orange]
"std::_Function_handler::_M_invoke" -> "amd::GpuAgent::CreateBlitSdma" [label=7,color=pink]
"amd::GpuAgent::CreateBlitSdma" -> "amd::BlitSdma::BlitSdma" [label=0,color=red]
"amd::BlitSdma::BlitSdma" -> "os::CreateMutex" [label=0,color=red]
"amd::GpuAgent::CreateBlitSdma" -> "amd::BlitSdma::Initialize" [label=1,color=orange]
"amd::BlitSdma::Initialize" -> "core::Runtime::GetLinkInfo" [label=0,color=red]
"amd::BlitSdma::Initialize" -> "std::_Function_handler::_M_invoke" [label=1,color=orange]
"amd::BlitSdma::Initialize" -> "core::InterruptSignal::InterruptSignal" [label=2,color=greenyellow]
"core::InterruptSignal::InterruptSignal" -> "core::InterruptSignal::EventPool::alloc" [label=1,color=orange]
"core::InterruptSignal::EventPool::alloc" -> "os::AcquireMutex     " [label=0,color=red]
"core::InterruptSignal::EventPool::alloc" -> "core::InterruptSignal::CreateEvent" [label=1,color=orange]
"core::InterruptSignal::EventPool::alloc" -> "os::ReleaseMutex   " [label=2,color=greenyellow]
"AMD::hsa_amd_signal_create" -> "std::_Rb_tree::_M_get_insert_unique_pos  " [label=2,color=greenyellow]
"AMD::hsa_amd_signal_create" -> "std::_Rb_tree::_M_erase" [label=3,color=green]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=0,color=red]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=1,color=orange]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=2,color=greenyellow]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=3,color=green]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=4,color=blue]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=5,color=indigo]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=6,color=purple]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=7,color=pink]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=8,color=black]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=9,color=brown]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=10,color=red]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=11,color=orange]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=12,color=greenyellow]
"std::_Rb_tree::_M_erase" -> "std::_Rb_tree::_M_erase" [label=13,color=green]
"AMD::hsa_amd_signal_create" -> "core::LocalSignal::LocalSignal" [label=4,color=blue]
"AMD::hsa_amd_signal_create" -> "core::BusyWaitSignal::BusyWaitSignal" [label=5,color=indigo]
"amd::BlitKernel::Initialize" -> "std::_Function_handler::_M_invoke" [label=2,color=greenyellow]
"amd::BlitKernel::Initialize" -> "std::_Rb_tree::_M_get_insert_hint_unique_pos  " [label=3,color=green]
"amd::BlitKernel::Initialize" -> "std::_Rb_tree::_M_get_insert_unique_pos   " [label=4,color=blue]
"amd::BlitKernel::Initialize" -> "std::_Rb_tree::_M_get_insert_hint_unique_pos  " [label=5,color=indigo]
"amd::BlitKernel::Initialize" -> "std::_Rb_tree::_M_get_insert_unique_pos   " [label=6,color=purple]
"amd::BlitKernel::Initialize" -> "std::_Rb_tree::_M_insert_node " [label=7,color=pink]
"amd::BlitKernel::Initialize" -> "amd::GpuAgent::AssembleShader" [label=8,color=black]
"amd::GpuAgent::AssembleShader" -> "std::_Rb_tree::_M_get_insert_unique_pos    " [label=0,color=red]
"amd::GpuAgent::AssembleShader" -> "std::_Function_handler::_M_invoke" [label=1,color=orange]
"amd::GpuAgent::AssembleShader" -> "std::_Rb_tree::_M_erase" [label=2,color=greenyellow]
"amd::BlitKernel::Initialize" -> "amd::BlitKernel::EnableProfiling" [label=9,color=brown]
"amd::BlitKernel::Initialize" -> "std::_Rb_tree::_M_erase" [label=10,color=red]
"core::SharedSignalPool_t::alloc" -> "std::vector      " [label=2,color=greenyellow]
"core::SharedSignalPool_t::alloc" -> "std::vector      " [label=3,color=green]
"core::SharedSignalPool_t::alloc" -> "os::ReleaseMutex    " [label=4,color=blue]
"amd::AqlQueue::AqlQueue" -> "core::LocalSignal::LocalSignal" [label=1,color=orange]
"amd::AqlQueue::AqlQueue" -> "os::CreateMutex " [label=2,color=greenyellow]
"amd::AqlQueue::AqlQueue" -> "amd::AqlQueue::AllocRegisteredRingBuffer" [label=3,color=green]
"amd::AqlQueue::AllocRegisteredRingBuffer" -> "std::_Function_handler::_M_invoke" [label=0,color=red]
"amd::AqlQueue::AqlQueue" -> "os::AcquireMutex      " [label=4,color=blue]
"amd::AqlQueue::AqlQueue" -> "core::InterruptSignal::CreateEvent " [label=5,color=indigo]
"amd::AqlQueue::AqlQueue" -> "core::InterruptSignal::InterruptSignal" [label=6,color=purple]
"amd::AqlQueue::AqlQueue" -> "os::ReleaseMutex     " [label=7,color=pink]
"amd::AqlQueue::AqlQueue" -> "amd::AqlQueue::InitScratchSRD" [label=8,color=black]
"amd::AqlQueue::AqlQueue" -> "AMD::hsa_amd_signal_async_handler" [label=9,color=brown]
"AMD::hsa_amd_signal_async_handler" -> "core::Runtime::IsOpen        " [label=0,color=red]
"AMD::hsa_amd_signal_async_handler" -> "core::InterruptSignal::_IsA" [label=1,color=orange]
"AMD::hsa_amd_signal_async_handler" -> "core::Runtime::SetAsyncSignalHandler" [label=2,color=greenyellow]
"core::Runtime::SetAsyncSignalHandler" -> "os::AcquireMutex       " [label=0,color=red]
"core::Runtime::SetAsyncSignalHandler" -> "HSA::hsa_signal_create " [label=1,color=orange]
"core::Runtime::SetAsyncSignalHandler" -> "AMD::hsa_amd_signal_create" [label=2,color=greenyellow]
"core::Runtime::SetAsyncSignalHandler" -> "core::Runtime::AsyncEvents::PushBack" [label=3,color=green]
"core::Runtime::AsyncEvents::PushBack" -> "std::vector       " [label=0,color=red]
"core::Runtime::AsyncEvents::PushBack" -> "std::vector       " [label=1,color=orange]
"core::Runtime::AsyncEvents::PushBack" -> "std::vector       " [label=2,color=greenyellow]
"core::Runtime::AsyncEvents::PushBack" -> "std::vector       " [label=3,color=green]
"core::Runtime::AsyncEvents::PushBack" -> "std::vector       " [label=4,color=blue]
"core::Runtime::SetAsyncSignalHandler" -> "os::CreateThread" [label=4,color=blue]
"core::Runtime::SetAsyncSignalHandler" -> "core::InterruptSignal::StoreRelease" [label=5,color=indigo]
"core::Runtime::SetAsyncSignalHandler" -> "os::ReleaseMutex      " [label=6,color=purple]
"amd::AqlQueue::AqlQueue" -> "std::_Function_handler::_M_invoke" [label=10,color=red]
"amd::GpuAgent::CreateInterceptibleQueue" -> "core::Runtime::InternalQueueCreateNotify" [label=1,color=orange]
"amd::GpuAgent::DmaCopy" -> "std::_Function_base::_Base_manager::_M_manager " [label=2,color=greenyellow]
"amd::GpuAgent::DmaCopy" -> "os::ReleaseMutex       " [label=3,color=green]
"amd::GpuAgent::DmaCopy" -> "amd::GpuAgent::GetBlitObject" [label=4,color=blue]
"amd::GpuAgent::GetBlitObject" -> "amd::GpuAgent::HiveId" [label=0,color=red]
"amd::GpuAgent::GetBlitObject" -> "amd::CpuAgent::HiveId" [label=1,color=orange]
"amd::GpuAgent::DmaCopy" -> "std::_Function_handler::_M_invoke" [label=5,color=indigo]
"amd::GpuAgent::DmaCopy" -> "std::_Function_base::_Base_manager::_M_manager " [label=6,color=purple]
"(anonymous namespace)::RegionMemory::Freeze" -> "amd::BlitKernel::SubmitLinearCopyCommand" [label=1,color=orange]
"amd::BlitKernel::SubmitLinearCopyCommand" -> "amd::BlitKernel::AcquireWriteIndex" [label=0,color=red]
"amd::BlitKernel::AcquireWriteIndex" -> "amd::AqlQueue::AddWriteIndexAcqRel " [label=0,color=red]
"amd::BlitKernel::AcquireWriteIndex" -> "amd::AqlQueue::LoadReadIndexRelaxed " [label=1,color=orange]
"amd::BlitKernel::SubmitLinearCopyCommand" -> "amd::BlitKernel::PopulateQueue" [label=1,color=orange]
"amd::BlitKernel::SubmitLinearCopyCommand" -> "amd::BlitKernel::ReleaseWriteIndex" [label=2,color=greenyellow]
"amd::BlitKernel::SubmitLinearCopyCommand" -> "non-virtual thunk to amd::AqlQueue::StoreRelease(long) " [label=3,color=green]
"amd::BlitKernel::SubmitLinearCopyCommand" -> "amd::AqlQueue::StoreRelease " [label=4,color=blue]
"amd::BlitKernel::SubmitLinearCopyCommand" -> "amd::AqlQueue::StoreRelaxed " [label=5,color=indigo]
"amd::BlitKernel::SubmitLinearCopyCommand" -> "HSA::hsa_signal_store_relaxed" [label=6,color=purple]
"HSA::hsa_signal_store_relaxed" -> "core::InterruptSignal::StoreRelaxed" [label=0,color=red]
"HSA::hsa_signal_store_relaxed" -> "non-virtual thunk to amd::AqlQueue::StoreRelaxed(long)" [label=1,color=orange]
"HSA::hsa_signal_store_relaxed" -> "amd::AqlQueue::StoreRelaxed  " [label=2,color=greenyellow]
"amd::BlitKernel::SubmitLinearCopyCommand" -> "amd::BlitKernel::SubmitLinearCopyCommand" [label=7,color=pink]
"amd::BlitKernel::SubmitLinearCopyCommand" -> "HSA::hsa_signal_wait_scacquire" [label=8,color=black]
"HSA::hsa_signal_wait_scacquire" -> "core::InterruptSignal::WaitAcquire" [label=0,color=red]
"core::InterruptSignal::WaitAcquire" -> "core::InterruptSignal::WaitRelaxed" [label=0,color=red]
"core::InterruptSignal::WaitRelaxed" -> "HSA::hsa_system_get_info" [label=0,color=red]
"HSA::hsa_system_get_info" -> "core::Runtime::IsOpen         " [label=0,color=red]
"HSA::hsa_system_get_info" -> "core::Runtime::GetSystemInfo" [label=1,color=orange]
"amd::hsa::loader::ExecutableImpl::Freeze" -> "amd::hsa::loader::LoadedCodeObjectImpl::getDelta" [label=2,color=greenyellow]
"amd::hsa::loader::LoadedCodeObjectImpl::getDelta" -> "amd::hsa::loader::LoadedCodeObjectImpl::getLoadBase" [label=0,color=red]
"amd::hsa::loader::LoadedCodeObjectImpl::getDelta" -> "amd::LoaderContext::SegmentAddress  " [label=1,color=orange]
"amd::hsa::loader::LoadedCodeObjectImpl::getDelta" -> "(anonymous namespace)::RegionMemory::Address  " [label=2,color=greenyellow]
"amd::hsa::loader::ExecutableImpl::Freeze" -> "std::string::_S_construct  " [label=3,color=green]
"amd::hsa::loader::ExecutableImpl::Freeze" -> "amd::hsa::common::ReaderWriterLock::WriterUnlock " [label=4,color=blue]
"amd::hsa::loader::AmdHsaCodeLoader::FreezeExecutable" -> "amd::hsa::common::ReaderWriterLock::WriterLock  " [label=1,color=orange]
"amd::hsa::loader::AmdHsaCodeLoader::FreezeExecutable" -> "_loader_debug_state" [label=2,color=greenyellow]
"amd::hsa::loader::AmdHsaCodeLoader::FreezeExecutable" -> "amd::hsa::common::ReaderWriterLock::WriterUnlock  " [label=3,color=green]
}